Automated ELK Stack Deployment

The files in this repository were used to configure the network depicted below.

**Note**: The following image link needs to be updated. Replace `diagram_filename.png` with the name of your diagram image file.  

![TODO: Update the path with the name of your diagram]
https://github.com/alimdj2021/cybersecurity/blob/main/Images/Diagram.png
These files have been tested and used to generate a live ELK deployment on Azure. They can be used to either recreate the entire deployment pictured above. Alternatively, select portions of the _____ file may be used to install only certain pieces of it, such as Filebeat.

  - _TODO: Enter the playbook file._
ElkstackPlaybook



This document contains the following details:
- Description of the Topology 
- Access Policies
- ELK Configuration
  - Beats in Use
  - Machines Being Monitored
- How to Use the Ansible Build

### Description of the Topology

The main purpose of this network is to expose a load-balanced and monitored instance of DVWA, the D*mn Vulnerable Web Application.

Load balancing ensures that the application will be highly Functional, in addition to restricting High-traffic to the network.
- _TODO: What aspect of security do load balancers protect? What is the advantage of a jump box?_
It helps prevent overloading servers as well as improve productivity and maximizes uptime.
It also adds strenght by rerouting live traffic from one server to another causing it to eliminate single points of failure from attacks such as DDOS attack.
Jump-box are collection of highly secured computers that are never used from non-admin tasks. Throughout the years, jump-box has strength into an even more comprehensive/lock-down secure admin workstation to decrease the changes of hackers/malware infection.

Integrating an ELK server allows users to easily monitor the vulnerable VMs for changes to the network and system logs.
- _TODO: What does Filebeat watch for?_
It monitors the log files/locations that you specify and forwards them to Elasticsearch/Logstash for indexing
- _TODO: What does Metricbeat record?_
It records metrics/statistics data and transports them to the output that you specifics through Elasticsearch/Logstash.

The configuration details of each machine may be found below.
_Note: Use the [Markdown Table Generator](http://www.tablesgenerator.com/markdown_tables) to add/remove values from the table_.

| Name     | Function | IP Address | Operating System |
|----------|----------|------------|------------------|
| Jump Box | Gateway  | 10.0.0.1   | Linux            |
| Web-1    | Server1    10.0.0.7     Linux
| Web-2    | Server2  | 10.0.0.8   | Linux            |
| Web-3    | Server3  | 10.0.0.9   | Linux            |

### Access Policies

The machines on the internal network are not exposed to the public Internet. 

Only the  Jump box machine can accept connections from the Internet. Access to this machine is only allowed from the following IP addresses:
- _TODO: 52.250.120.188

Machines within the network can only be accessed by Jump-box virtual machine.
- _TODO: Which machine did you allow to access your ELK VM? What was its IP address?10.0.0.4

A summary of the access policies in place can be found in the table below.

| Name     | Publicly Accessible | Allowed IP Addresses |
|----------|---------------------|----------------------|
| Jump Box | No.                 | 52.250.120.188       |
| Web-1    | NO                  | 10.0.0.4             |
| Web-2    | No                  | 10.0.0.4             |

### Elk Configuration

Ansible was used to automate configuration of the ELK machine. No configuration was performed manually, which is advantageous because...
- _TODO: What is the main advantage of automating configuration with Ansible?_
Ansible allows IT administrators to automate their daily tasks and save a lot of time. That frees them to focus on efforts that help deliver more value to the business by spending time on more important tasks.

The playbook implements the following tasks:
- _TODO: In 3-5 bullets, explain the steps of the ELK installation play. E.g., install Docker; download image; etc._
- ...Install Docker, Install python3-pip, Install Docker python module, Set the VM.MAX_map_count to 262144.
- ...Download and launch a docker elk container.

The following screenshot displays the result of running `docker ps` after successfully configuring the ELK instance.

**Note**: The following image link needs to be updated. Replace `docker_ps_output.png` with the name of your screenshot image file.  

![TODO: Update the path with the name of your screenshot of docker ps output](Images/docker_ps_output.png)13-ElK-Stack-Project_Resources_Readme/readme/cyberclass/images/docker_ps_output.png

### Target Machines & Beats
This ELK server is configured to monitor the following machines:
- _TODO: List the IP addresses of the machines you are monitoring_
Web-1 10.0.0.7
Web-2 10.0.0.8
Web-3 10.0.0.9

We have installed the following Beats on these machines:
- _TODO: Specify which Beats you successfully installed_
Filebeat and Metricbeat

These Beats allow us to collect the following information from each machine:
- _TODO: In 1-2 sentences, explain what kind of data each beat collects, and provide 1 example of what you expect to see. E.g., `Winlogbeat` collects Windows logs, which we use to track user logon events, etc._
 Filebeat monitors the log files or locations that you specify, which we use to see what changes or messages the log files have received such as kill commands. Metricbeat records the metrics and statistics from the operation system and from services running on the server, which we could use to look at how much RAM and CPU usage was being used on the webservers at certain time.
### Using the Playbook
In order to use the playbook, you will need to have an Ansible control node already configured. Assuming you have such a control node provisioned: 

SSH into the control node and follow the steps below:
- Copy the ansible.cfgfile to /etc/ansible.
- Update the metricbeat-configuration.yml file to include the ELK private IP in lines 62 and 96
- Run the playbook, and navigate to http://52.186.147.224 to check that the installation worked as expected.

_TODO: Answer the following questions to fill in the blanks:_
- _Which file is the playbook? Where do you copy it?_
Copy the install-elk.yml and filebeat-playbook.yml file to /etc/ansible.
- _Which file do you update to make Ansible run the playbook on a specific machine? 
Update the install-elk.yml and fielbeat-playbook.yml file to include the machine you want use the playbooks on by changing the hosts name on the 3rd line. /etc/ansible/hosts file (IP of the virtual Machines)
How do I specify which machine to install the ELK server on versus which to install Filebeat on?_ I have to specify two separate groups in the etc/ansible/hosts fiel. One of the groups will be webservers which has the IPs of the VMs that I will install filebeat to. The other group is name elkservers which will have the IP of the VM I will install ELK to.
- _Which URL do you navigate to in order to check that the ELK server is running?
http://52.186.147.224

/etc/ansible/hosts
[webservers] 10.0.0.4 ansible_python_interpreter=/usr/bin/python3 10.0.0.7 ansible_python_interpreter=/usr/bin/python3 10.0.0.8 ansible_python_interpreter=/usr/bin/python3
[elk] 10.1.0.4 ansible_python_interpreter=/usr/bin/python3
•	Copy the install-elk.yml and filebeat-playbook.yml file to /etc/ansible.
•	Update the install-elk.yml and filebeat-playbook.yml file to include the machine you want use the playbooks on by changing the hosts name on the 3rd line.
•	Run the playbook, and navigate to http://[52.186.147.224]:5601/app/kibana to check that the installation worked as expected.

_As a **Bonus**, provide the specific commands the user will need to run to download the playbook, update 
  -------Filebeat---------

- To create the filebeat-configuration.yml file: nano filebeat-configuration.yml. For this, I used the filebeat configuration file template.

- To create the playbook: nano filebeat-playbook.yml

  ---
 - name: installing and launching filebeat
	   hosts: webservers
       become: true
       tasks:

	   - name: download filebeat deb
  	     command: curl -L -O https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.7.1-amd64.deb

	   - name: install filebeat deb
  	     command: dpkg -i filebeat-7.7.1-amd64.deb

	   - name: drop in filebeat.yml
  	     copy:
   	       src: ./files/filebeat-configuration.yml
   	       dest: /etc/filebeat/filebeat.yml

	   - name: enable and configure system module
  	     command: filebeat modules enable system

	   - name: setup filebeat
  	     command: filebeat setup

	   - name: start filebeat service
  	    command: service filebeat start
---
-To run the playbook: ansible-playbook filebeat-playbook.yml

* In order to run the playbook, you have to be in the directory the playbook is at, or give the path to it (ansible-playbook /etc/ansible/roles/filebeat-playbook.yml


-------Metricbeat-------

- To create the metricbeat-configuration.yml file: nano metricbeat-configuration.yml. For this, I used the metricbeat configuration file template.

- To create the playbool: nano metricbeat-playbook.yml

---
  - name: installing and lunching metricbeat
    hosts: webservers
    become: true
    tasks:
    
  - name: download metricbeat deb
    command: curl -L -O https://artifacts.elastic.co/downloads/beats/metricbeat/metricbeat-7.7.1-amd64.deb
    
  - name: install metricbeat deb
    command: sudo dpkg -i metricbeat-7.7.1-amd64.deb
    
  - name: drop in metricbeat.yml
    copy:
      src: /etc/ansible/roles/files/metricbeat-configuration.yml
      dest: /etc/metricbeat/metricbeat.yml
      
   - name: enable and configure system module
     command: metricbeat modules enable system
     
   - name: setup metricbeat
     command: metricbeat setup
     
   - name: start metricbeat service
     command: service metricbeat start
     
   ---
   
   - To run the playbook: ansible-playbook metricbeat-playbook.yml

